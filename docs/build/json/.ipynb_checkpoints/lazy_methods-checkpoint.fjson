{
    "body": "<div class=\"section\" id=\"Lazy-evaluation\">\n<h1>Lazy evaluation<a class=\"headerlink\" href=\"#Lazy-evaluation\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Under the hood nchack relies mostly on CDO to carry out the specified manipulation of netcdf files. Each time CDO is called a new temporary file is generated. This has the potential to result in slower than necessary processing chains, as IO takes up far too much time.</p>\n<p>I will demonstrate this using a netcdf file os sea surface temperature. To download the file we can just use wget:</p>\n<div class=\"nbinput nblast docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[1]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"k\">import</span> <span class=\"n\">clear_output</span>\n<span class=\"o\">!</span> wget ftp://ftp.cdc.noaa.gov/Datasets/COBE2/sst.mon.ltm.1981-2010.nc\n<span class=\"n\">clear_output</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n<p>We also, of course, need to import nchack. Please note I am suppressing warnings to make this notebook more readable. I do not recommend suppressing warnings\u2026.</p>\n<div class=\"nbinput docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[2]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">nchack</span> <span class=\"k\">as</span> <span class=\"nn\">nc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">filterwarnings</span><span class=\"p\">(</span><span class=\"s1\">&#39;ignore&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"nboutput nblast docutils container\">\n<div class=\"prompt empty docutils container\">\n</div>\n<div class=\"output_area docutils container\">\n<div class=\"highlight\"><pre>\nTip: include atexit.register(nchack.clean_all) after loading nchack\n</pre></div></div>\n</div>\n<p>We can then set up the tracker file which we will use for manipulating the SST climatology.</p>\n<div class=\"nbinput nblast docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[8]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"n\">ff</span> <span class=\"o\">=</span>  <span class=\"s2\">&quot;sst.mon.ltm.1981-2010.nc&quot;</span>\n<span class=\"n\">tracker</span> <span class=\"o\">=</span> <span class=\"n\">nc</span><span class=\"o\">.</span><span class=\"n\">NCTracker</span><span class=\"p\">(</span><span class=\"n\">ff</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<p>Now, let\u2019s select the variable sst, clip the file to the northern hemisphere, calculate the mean value in each grid cell for the first half of the year, and then calculate the spatial mean.</p>\n<div class=\"nbinput nblast docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[9]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">select_variables</span><span class=\"p\">(</span><span class=\"s2\">&quot;sst&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">clip</span><span class=\"p\">(</span><span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">])</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">select_months</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">)))</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">spatial_mean</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n<p>The tracker\u2019s history is as follows:</p>\n<div class=\"nbinput docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[12]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">history</span>\n</pre></div>\n</div>\n</div>\n<div class=\"nboutput nblast docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[12]:\n</pre></div>\n</div>\n<div class=\"output_area highlight-none notranslate\"><div class=\"highlight\"><pre>\n<span></span>[&#39;cdo -s -selname,sst sst.mon.ltm.1981-2010.nc /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmp1rm6szfq.nc&#39;,\n &#39;cdo -s -sellonlatbox,-180,180,0,90 /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmp1rm6szfq.nc /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmpl89ojir1.nc&#39;,\n &#39;cdo -s -selmonth,1,2,3,4,5,6 /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmpl89ojir1.nc /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmpiiv55wgz.nc&#39;,\n &#39;cdo -s -timmean /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmpiiv55wgz.nc /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmpfhqam3u2.nc&#39;,\n &#39;cdo -s -fldmean /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmpfhqam3u2.nc /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmpkc7w3cge.nc&#39;]\n</pre></div>\n</div>\n</div>\n<p>In total, there are 5 operations, with temporary files created each time. However, we only want to generate one temporary file. So, can we do that? Yes, thanks to CDO\u2019s method chaining ability. If we want to utilize this we need to set the tracker\u2019s evaluation to lazy. Once this is done nchack will only evaluate things either when it needs to, e.g.\u00a0you call a method that cannot possibly be chained, or if you release it. This works as follows:</p>\n<div class=\"nbinput nblast docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[14]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"n\">ff</span> <span class=\"o\">=</span>  <span class=\"s2\">&quot;sst.mon.ltm.1981-2010.nc&quot;</span>\n<span class=\"n\">tracker</span> <span class=\"o\">=</span> <span class=\"n\">nc</span><span class=\"o\">.</span><span class=\"n\">NCTracker</span><span class=\"p\">(</span><span class=\"n\">ff</span><span class=\"p\">)</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">lazy</span><span class=\"p\">()</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">select_variables</span><span class=\"p\">(</span><span class=\"s2\">&quot;sst&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">clip</span><span class=\"p\">(</span><span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">])</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">select_months</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">)))</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">spatial_mean</span><span class=\"p\">()</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n<p>We can now see that the history is much cleaner, with only one command.</p>\n<div class=\"nbinput docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[16]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">history</span>\n</pre></div>\n</div>\n</div>\n<div class=\"nboutput nblast docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[16]:\n</pre></div>\n</div>\n<div class=\"output_area highlight-none notranslate\"><div class=\"highlight\"><pre>\n<span></span>[&#39;cdo -s -L -fldmean -timmean -selmonth,1,2,3,4,5,6 -sellonlatbox,-180,180,0,90 -selname,sst sst.mon.ltm.1981-2010.nc /tmp/nchackbmqgjvnqnchacknchackbmqgjvnqnchacktmppq58k6v9.nc&#39;]\n</pre></div>\n</div>\n</div>\n<p>How does this impact run time? Let\u2019s time the original, unchained method.</p>\n<div class=\"nbinput docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[19]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"o\">%%time</span>\n<span class=\"n\">ff</span> <span class=\"o\">=</span>  <span class=\"s2\">&quot;sst.mon.ltm.1981-2010.nc&quot;</span>\n<span class=\"n\">tracker</span> <span class=\"o\">=</span> <span class=\"n\">nc</span><span class=\"o\">.</span><span class=\"n\">NCTracker</span><span class=\"p\">(</span><span class=\"n\">ff</span><span class=\"p\">)</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">select_variables</span><span class=\"p\">(</span><span class=\"s2\">&quot;sst&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">clip</span><span class=\"p\">(</span><span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">])</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">select_months</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">)))</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">spatial_mean</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n<div class=\"nboutput nblast docutils container\">\n<div class=\"prompt empty docutils container\">\n</div>\n<div class=\"output_area docutils container\">\n<div class=\"highlight\"><pre>\nCPU times: user 12.1 ms, sys: 23.5 ms, total: 35.6 ms\nWall time: 540 ms\n</pre></div></div>\n</div>\n<div class=\"nbinput docutils container\">\n<div class=\"prompt highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[20]:\n</pre></div>\n</div>\n<div class=\"input_area highlight-ipython3 notranslate\"><div class=\"highlight\"><pre>\n<span></span><span class=\"o\">%%time</span>\n<span class=\"n\">ff</span> <span class=\"o\">=</span>  <span class=\"s2\">&quot;sst.mon.ltm.1981-2010.nc&quot;</span>\n<span class=\"n\">tracker</span> <span class=\"o\">=</span> <span class=\"n\">nc</span><span class=\"o\">.</span><span class=\"n\">NCTracker</span><span class=\"p\">(</span><span class=\"n\">ff</span><span class=\"p\">)</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">lazy</span><span class=\"p\">()</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">select_variables</span><span class=\"p\">(</span><span class=\"s2\">&quot;sst&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">clip</span><span class=\"p\">(</span><span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">])</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">select_months</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">)))</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">spatial_mean</span><span class=\"p\">()</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n<div class=\"nboutput nblast docutils container\">\n<div class=\"prompt empty docutils container\">\n</div>\n<div class=\"output_area docutils container\">\n<div class=\"highlight\"><pre>\nCPU times: user 4.35 ms, sys: 6.32 ms, total: 10.7 ms\nWall time: 148 ms\n</pre></div></div>\n</div>\n<p>This was almost 4 times faster. Exact speed improvements, will of course depend on specific IO requirements, and some times using lazy evaluation will make negligible impact, but in others can make code over 10 times fasteExact speed improvements, will of course depend on specific IO requirements, and some times using lazy evaluation will make negligible impact, but in others can make code over 10 times faster.</p>\n</div>\n",
    "title": "Lazy evaluation",
    "sourcename": ".ipynb_checkpoints/lazy_methods-checkpoint.ipynb.txt",
    "current_page_name": ".ipynb_checkpoints/lazy_methods-checkpoint",
    "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Lazy evaluation</a></li>\n</ul>\n",
    "page_source_suffix": ".ipynb"
}