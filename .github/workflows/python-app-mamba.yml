# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Linux testing using micromamba

defaults:
  run:
    shell: bash -l {0}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: "ubuntu-latest" 

    steps:

      - uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          micromamba-version: '1.3.1-0'
          environment-name: foo
          create-args: cdo nco geos
          init-shell: >-
            bash
            powershell
          cache-environment: true
          post-cleanup: 'all'
       uses: actions/checkout@v3
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          #conda install cdo pip nco geos -y
          pip install numpy 
          pip install cartopy
          pip install dask
          #conda install numpy -y
          #conda install cartopy -y
          #conda install dask -y
          #    conda install flake8
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install .
          pip install pandas
          pip install rioxarray
          pip install pytest
          pip install pytest-cov
          pip install coverage 

          #- name: Lint with flake8
          #  shell: bash -l {0}
          #  run: |
          #    conda activate foo
          #    # stop the build if there are Python syntax errors or undefined names
          #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          # conda activate foo
          #pytest tests/test*.py
          # python testing/test_parallel.py
          pytest tests/test*.py
      #- uses: ./
      #- name: Run python testing
      #  shell: bash -l {0} 
      #  #shell: pwsh 
      #  run: |
      #    ls *
      #    pip install xarray
      #    pip install rioxarray
      #    pip install pytest
      #    pip install numpy 
      #    pip install cartopy
      #    pip install dask
      #    pip install -r requirements.txt
      #    pip install .
      #    pip install pandas
      #    pip install rioxarray
      #    pip install pytest
      #    pip install pytest-cov
      #    pip install coverage 
      #    pytest ../tests/test*.py
      #  #shell: micromamba-shell {0}